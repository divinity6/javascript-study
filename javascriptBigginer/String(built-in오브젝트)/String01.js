/**
  * 프로그램 설명문서 주석
  * 2021.01.09 수업
  * 
  * ====== String 오브젝트 ========
  * 
  *   - "ABC"처럼 문자 처리를 위한 오브젝트
  * 
  *   - 즉,String 오브젝트에
  *   --> 문자 처리를 위한
  *   --> 함수와 프로퍼티가 포함되어 있으며
  *   --> 함수를 호출하여 문자 처리를 하게된다.
 */


 /*
      === 문자 연결 방법 ===

      - 한줄에서 연결
      --> var book = "12" + "AB" + "가나"

      - 줄을 분리하여 연결
      --> +로 문자열 연결
      --> 역슬래시(\)로 문자열 연결
 */
console.log("=====================================");
window.onload = function() {
   "use strict"
   debugger;
   
   var concat = 123 + "abc" + "가나다라";
   console.log(concat);
   
   concat = "abc \ 가나다라"
   console.log(concat);

   
 /*
      === 프로퍼티 리스트 ===

      - 이름                        - 개요
      - new String()                - 인스턴스 생성
      - String 함수
      - String()                    - 문자열로 변환하여 반환 
      - fromCharCode()              - 유니코드를 문자열로 변환하여 반환
      - String 프로퍼티
      - length                      - 문자열의 문자 수 반환
      - String.prototype
      - constructor                 - 생성자
      - valueOf()                   - 프리미티브 값 반환
      - toString()                  - 문자열로 반환
      - charAt()                    - 인덱스 번째 문자 반환
      - indexOf()                   - 일치하는 문자열 중에서 가장 작은 인덱스 반환
          --> 왼쪽에서 오른쪽으로갈수록 값이커짐(0,1,2,3,...)
      - lastIndexOf()               - 일치하는 문자열 중에서 가장 큰 인덱스 반환

      - concat()                    - 문자열 연결
      - toLowerCase()               - 영문 소문자로 변환
      - toUpperCase()               - 영문 대문자로 변환
      - trim()                      - 문자열 앞뒤의 화이트 스페이스 삭제
      - substring()                 - 시작에서 끝 직전까지 값 반환
          --> '직전' 바로앞에까지
      - substr()                    - 시작 위치부터 지정한 문자 수 반환
      - slice()                     - 시작에서 끝 직전까지 값 반환.substring()과 차이 없음
          --> 추출하는 조건에서 차이있다

     * 여기부터 정규표현식에서 사용
      - match()                     - 매치 결과 반환
          --> 다수를 매치하거나 다양한 조건으로 매치할수있는것이 특징
      - replace()                   - 매치 결과를 지정한 값으로 대체
      - search()                    - 검색된 첫 번째 인덱스 반환
      - split()                     - 구분자로 분리하여 반환
     * 여기까지 정규표현식
          --> 정규표현식은 문자열을 대상으로 한다.(string 오브젝트에 정규표현식 사용가능)

      - charCodeAt()                - 인덱스 번째 문자를 유니코드로 반환
      --> fromCharCode()와 반대개념
      - localCompare()              - 값의 위치를 1,0,-1로 반환
      --> 값의 위치 1이면 (앞)왼쪽,0이면 (같음)가운데 ,-1 (뒤)오른쪽
 */
}



