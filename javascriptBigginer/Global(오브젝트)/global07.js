/**
  * 프로그램 설명문서 주석
  * 2021.01.31 수업
  * 
  *     ======= eval() ========
  * 
  *     - 구분                  - 데이터(값)
  * 
  *     - 파라미터              - JS 코드
  *     - 반환                  - JS 코드를 실행하여 반환한 것
  * 
  *     -----------------------------------------------------
  * 
  *     -- 파라미터의 문자열을
  * 
  *     ----> JS 코드로 간주하여 실행
  *     ----> 실행결과를 반환 값으로 사용
  *           값을 반환하지 않으면 undefined 반환
  * 
  *     -- eval() 함수 실행 방법
  * 
  *     -- 보안에 문제가 있다고 알려져 있다
  * 
  *     ----> 사용을 비권장함
  * 
  *     -------------------------------------------------------
  * 
  *     -- 자바스크립트 코드를 문자열로 작성하고 이것을 기계어로 번역하고 실행까지 한다.
  */
console.log("=====================================");

window.onload = function() {
 // "use strict"
 // 우선 use strict 함수를 주석으로 처리 했다.
 // "use strict" 상태에서는 eval 함수가 제약이 많다.
  console.log(window);

  console.log('--- 문자열 코드 실행 ---');

  var result = eval("parseInt('-123.45')");
  console.log(result);
  
  /*
     eval()은 보안에 문제가 있어 사용이 권장되지 않는다


     왜냐하면 parseInt('-123.45')의 파라미터가 전체가 전부 문자열이다

     그래서 악의적인 해커가 악의적인 문자열로 파라미터에 집어넣는다면

     그것이 그냥 string으로 출력되는 것이 아니라 자바스크립트 코드로 간주하여 실행한다


     실행한다는 것이 문제이다

     그러면 악의적인 코드가 그대로 실행이되면 어떤 코드가 어떻게 움직일지 모른다.

     그래서 이것은 되도록이면 사용하지 않는 것이 좋다


     보안에 문제가 있을땐 되도록이면 멀리하면 멀리 할 수록 좋다, 친하게 안지낼 수록 좋다
  */

  debugger;

  /*
        1. add(200)으로 함수를 호출하면
        - 이 값에 100을 더해 반환 한다.

        2. 반환된 값을 result에 할당 한다.

        3. console.log()로 result 변숫값을 출력 한다.
  */

  var eval2 = eval(
    "function add(param){" + 
    "return param + 100" + 
    "};" +
    "result = add(200)"
  );
  // 이것들이 자바스크립트 코드상태로 변경되어버린다

  console.log(result);

  /*
      위의 eval()안의 코드는 VM에서 읽는다

      VM = VirtualMachin(가상 머신)
      VM은 가상머신이다

      가상 기계, 메모리안에서 실행되는 어떤 형태.

      그러니깐 이것은 즉, 메모리안에서 실행이 되어버리는것

      매우 위험하다.

      -- 자바스크립트 코드는 브라우저에서 소스를 볼 수 있다.
      
      -- 그래서 악의적인 코드를 만들 수가 있다.


      -- 문자열자체가 그런위험성을 가지고 있는 것이다

      -- 자바스크립트자체가 문제가 되는것이 아니라 문자열 자체로 

      -- 해석을 하고 실행까지 하는 그자체가 문제가 된다는 것이다
  

      **** 이상에서 봤듯이 eval()함수는 사용이 권장되지 않는다
  */
  debugger;
}



