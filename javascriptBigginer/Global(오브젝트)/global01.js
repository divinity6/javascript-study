/**
  * 프로그램 설명문서 주석
  * 2021.01.30 수업
  * 
  *      ======= Global 오브젝트 개요 ========
  * 
  *      - 모든 <script>를 통해 하나만 존재
  *      
  *      --> new 연산자로 인스턴스 생성 불가
  *      --> 모든 코드에서 공유
  * 
  *      - 이름(Global은 있지만)
  *      
  *      --> 오브젝트 실체가 없음
  *      --> 오브젝트를 작성(사용)할 수 없음
  * 
  *      -------------------------------------------------------------------
  * 
  *      -----> 모든 script element를 통해 하나만 존재한다
  *      -----> html의 script element의 src 속성에 자바스크립트 파일을 작성하고
  *      -----> 그 자바스크립트 파일에 자바스크립트 코드를 작성한다
  * .
  *      -----> 이러한 파일을 여러개 작성했다고 가정하겠다
  *      -----> new String 같은 경우에는 여러번 작성할 수 있다.
  *      -----> 그런데 글로벌 오브젝트는 하나만 존재하기 때문에 만들 수가 없다
  * 
  *      -----> 따라서 new 연산자로 인스턴스를 생성할 수 없다.
  *      -----> 어쩌면 하나만 존재하기 때문에 생성할 필요가 없는것이다
  *      -----> 또한 모든 코드에서 공유한다
  * 
  *      -----> 예를 든다면 A파일에서 글로벌 오브젝트에 프로퍼티 값을 설정했다
  *      -----> 그리고 B파일에서 A파일에서 설정한 글로벌 오브젝트에서 설정한 프로퍼티 값을
  *      -----> 사용할 수 있다
  *      -----> 파일이 달라도 전체가 하나이므로 모든 코드에서 값을 공유할 수 있다.
  * 
  * 
  *      -----> 그런데 Global이라는 이름은 있는데 오브젝트가 없다
  *      -----> 그런데도 Global오브젝트라고 쓴다
  *      -----> 조금 구조적으로 맞지않는다 하지만
  *      -----> 이것이 자바스크립트의 구조이기도한다
  * 
  *      -----> 예를 든다면 'Global 오브젝트에 있는 프로퍼티의 값을 설정할때는
  *      -----> 오브젝트 이름을 작성하지 않고 프로퍼티만 작성한다' 라는 것
  * 
  *      -----> 우리가 string.length를 하게되면 length값이 출력된다
  *      -----> 그런데 애는 string을 작성하지 않고 length만 하는 것이다
  *      -----> 그러면 자바스크립트엔진이 아 오브젝트가 없네 그러면
  *      -----> 글로벌 오브젝트로 간주해서 글로벌 오브젝트에 있는 프로퍼티 값을 구한다 라는것
  * 
  *      -----> 이것이 일반적인 어떤 구조에서는 맞지 않지만 이것이 하나의 또 구조라는 것
  * 
  */
console.log("=====================================");

window.onload = function() {
   /*
            =====  Global 오브젝트 함수,변수 =====

            - Global 오브젝트의 함수,변수를
            --> Global 함수, Global 변수라고 부른다

            - 함수 안에 작성한 것
            --> 지역 함수, 로컬(local)함수 라고 부름
            --> 지역 변수, 로컬(local)변수 라고 부름
            
            
            - 전역 객체라고 부르기도 하지만
            --> Global은 오브젝트 이름
            --> 강좌에서는 Global(글로벌) 오브젝트로 표기

            ------------------------------------------------------------
            
            -----> 구분이 필요할 때는 이렇게 Global 과 local이라고 한다만은
            -----> 일반적으로 지역과 글로벌을 지칭하지 않고 함수라고 하면
            -----> 그것은 함수안에 작성한것을 지칭한다

            -----> 따라서 글로벌 함수와 글로벌 변수는 글로벌이라고 지칭할 필요가 있다
            -----> 그런데 코드를 보면 앞뒤 문백으로 아,저것은 Global함수구나, 저것은
            -----> Local함수구나 라는 것을 알수 있다.

            -----> 하지만 확연하게 구분을 해야한다고 한다면 Global함수, Local함수,
            -----> 이렇게 사용하는 것이 좋다.

            -----> 그런데 Global오브젝트를 전역 객체라고 한다.
            -----> 강사님은 뉘앙스가 다르다고생각해 Global오브젝트로 강좌에서는 표기하겠다

            -----> 왜냐하면 Global오브젝트에서 Global은 오브젝트 이름이다
            -----> 우리가 String 오브젝트, Number 오브젝트와 같이 부를 때의
            -----> Global 오브젝트이다. 그런데 Number오브젝트를 숫자객체, String오브젝트를
            -----> 문자열 객체, 이것은 강사님이 일반적으로 사용하지 않는다
            -----> 그래서 Global은 이름이니깐 이름그대로 불러주는 것이 낫지않겠는가 해서
            -----> 이렇게부른다
            
   */

  "use strict"
  debugger;

}



