/**
  * 프로그램 설명문서 주석
  * 2021.01.04 수업
  * 
  * ======인스턴스 생성 방법/목적, new 연산자========
  * 
  * - new 연산자
  * --> 연산자이기 때문에 built-in Number object에 속하지 않지만
  * --> Number인스턴스 생성과 연계되므로 여기서 다룬다
 */

/*
   === new 연산자 ===

   - 구분            - 데이터 (값)

   - constructor     - 생성자

   - 파라미터         - 값opt

   - 반환             - 생성한 인스턴스



   -------------------------------------
   - 오브젝트로 인스턴스를 생성하여 반환

   --> new 연산자를 사용하면 인스턴스

   --> 코딩 관례로 첫 문자를 대문자로 작성

*/


console.log("=====================================");
"use strict"

//obj에 인스턴스가 할당됨
var obj = new Number();

console.log( window );
debugger;

// 1.원본(오브젝트)을 복사하는 개념
// 2.new --> 복사
// 3.복사한 복사본이 인스턴스
// 4.따라서 new Number()로 생성한 인스턴스를 obj에 할당한다

// new 연산자를 사용하여 함수로 호출 했을때
// 이때 함수로 호출되는 것을 생성자라고 한다
// 이것을 생성자 함수라고한다(뒤에서 더다룸)


// -- 즉, 생성자 함수를 사용하여 호출하게되면
// -- 인스턴스를 생성하여 반환한다.



console.log(typeof obj);
// --> 이때 생성한 인스턴스 타입은 object >> 애는 인스턴스임

debugger;




/*
   - 인스턴스 생성 목적
   
   --> 인스턴스마다 값을 갖기 위한 것




   ---> 여기서 oneObj 와 twoObj는 다른것은 다똑같고 파라미터만 다르다
        따라서, 이것이 인스턴스를 생성하는 목적이다

   ----> 원본을 a라는 사람과 b라는 사람과 c라는사람에게 

   ----> 복사해서 나누어주는것

   -----> 복사해서 나누어준 이유 : 그사람들이 보기위함

   -----> 그럼 원본을 보면안되나? Yes  "여기에 차이가 있다"

   ------> 복사해서 나눠주면 사람들은 거기에 메모를 할것아님?
   
   ------> 어떤사람은 123,어떤사람은 456 (이런것을 하기위해 복사해서 나눠준것)


   ---== 메모한것을 데이터 관점에서 보면 그것이바로 파라메타(매개변수) ==---

   --> 메모한것이 중복될수도있다
   --> 즉, 값이 중복될 수도 있지만 다른 경우를 대비해서 인스턴스를 만드는것

   ---> 이것이바로 인스턴스를 만드는 목적
*/

var oneObj = new Number("123");
//생성한 인스턴스에 저장
console.log(oneObj.valueOf());


console.log('---');

var twoObj = new Number("456");
console.log(twoObj.valueOf());