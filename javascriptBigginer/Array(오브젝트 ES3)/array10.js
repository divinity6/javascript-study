/**
  * 프로그램 설명문서 주석
  * 2021.02 08 수업
  * 
  *       ===== sort() =====
  * 
  *     - sort 알고리즘
 */
console.log("=====================================");

window.onload = function() {
  "use strict"

  var value = [ 101, 26, 7, 1234];
  value.sort(function(one, two){
    return one - two;
  });
  // 1. sort() 파라미터의 function(){}을 호출하면서
  //    101과 26을 파라미터 값으로 넘긴다
  //    101이 one에, 26이 two에 설정된다.

  // 2. one(101) - two(26)의 결과는 양수이며
  //    이 값을 반환한다

  // 3. 이때, 0보다 큰 값이 반환되면
  //    """배열에서 값의 위치를 바꾼다"""
  //    즉,[26 , 101, 7 ,1234]가 된다

  // 4. 다시 콜백 함수를 호출하면서  101과 7을 넘겨준다
  //    one(101) - two(7)의 결과는 양수이며
  //    0보다 큰 값을 반환하게 된다

  // 5. 반환 값이 0보다 크므로
  //    배열에서 값의 위치를 바꾼다
  //    즉, [26, 7, 101, 1234]가 된다

  // 6. 다시 함수를 호출하면서 101과 1234를 넘겨준다
  //    one(101) - two(1234)의 결과는 음수이며
  //    0보다 작은 값을 반환하게 된다

  // 7. 반환 값이 0보다 작거나 같으면
  //    """배열에서 값의 위치를 바꾸지 않는다"""
  //    따라서, [26, 7, 101, 1234]가 된다

  // 8. 다시 처음으로 돌아가 바뀌는 것이 없을 때까지
  //    배열의 엘리먼트 위치를 조정한다


  /*
        - [101,26,7,1234]로 배열 오브젝트(인스턴스)를 만들고 value에 할당한다

          그리고 배열 오브젝트의 sort메소드를 호출한다. 그리고 파라미터에 함수를 작성한다

          "이것을 콜백 함수라고 한다"

          === sort를 반복할때 마다 함수를 호출하는 것이다 ===



        - 자바스크립트 엔진이 호출을 해준다

        - 어떻게 보면 표현식이라고 볼 수 있다.

        - 파라미터 값이 표현식이면 표현식을 평가한다

        - 그런데 파라미터가 함수이다. 그러니까 함수를 실행 시키는 것이다.

        - return에서 반환된 값을 가지고 또다른 처리를 하는 것이다


        이제 사람이 생각하는 순으로 정렬이 된다

      - 첫번째 파라미터에서 두번째 파라미터를 빼고 결과가 양수이면 위치를 바꾸고

        음수면 바꾸지않는다. 그리고 바뀌지 않을때까지 계속 반복한다


      - 이제 콜백함수에서는 식을 작성해서 양수 또는 음수로 던져주는 것이다
        콜백 함수에 코드를 작성할 수 있다라는 것은 return에다가 뭔가다른 알고리즘을
        작성할 수 있다는 이야기도 되는 것이다

        예) return에다가 two - one을 해버린다. 그러면 반환 값이 바뀌어 버린다
            이것이 sort알고리즘의 전체이다.
  */

  console.log(value);

  debugger;

  /*
        ===== reverse() =====
  
      - 구분              - 데이터(값)

      - data              - 대상
      - 파라미터           - 사용하지 않음
      - 반환              - 결과

      ------------------------------------

      -- 배열의 엘리먼트 위치를 역순으로 바꾼다
      ----> 엘리먼트 값이 아닌 인덱스 기준
      ----> 대상 배열도 바뀜

      --------------------------------------
      *** 값이 아닌 인덱스 순서이다 ***
  */

  value =[101, 26, 7, 1234];
  value.reverse();

  console.log(value);
  debugger;

  value =[1, 3, 7, 5];
  
  // 파라미터를 사용하지 않는다

  console.log(value.reverse());
  debugger;


}



