/**
 * 프로그람 설명문서 주석
 * 2022.03. 13 수업
 *
 *           ===== 실행 환경 설정 =====
 *
 *     ----> 들어가기 앞서 이 장에서는 Node.js 를 사용하므로 실행 환경을 설정해야 한다.
 *
 *      - Node.js 환경 설정
 *       1. "es6" 폴더를 만들고
 *          es6 폴더로 이동한다
 *
 *       2. es6 폴더에 Node.js 를 설치한다
 *
 *       3. express.js 를 설치한다
 *
 *       4. node.js 와 express.js 설치 방법은
 *          검색하면 많이 나온다
 *
 *      - 강좌에서 제공하는 소스파일 다운로드
 *      --> 다운로드 받을 수 있는 곳은
 *          강좌 소개 메인 페이지에 작성되어 있다
 *
 *      --> 다운로드 받은 파일을 압축을 풀어
 *          es6 폴더에 설치한다
 *          아래 구조가 된다
 *          폴더 이름( 번호 ) 는 강좌의 섹션 번호와 같다
 *
 *      --> es6 폴더
 *          node_modules 폴더
 *          05, 강좌 제공 소스 파일 폴더
 *          index.html
 *          main.js
 *
 */
/**
 *           ===== 작성한 코드 실행 =====
 *
 *      - 강좌에서 통신이 포함되는 코드는
 *      --> 아래 순서에 따라 실행해야 한다
 *
 *      - 명령어 창(커맨드)에서 es6 폴더로 이동한다
 *      --> 명령어 창에서 node main.js 를 입력하고
 *          Enter 키를 누른다
 *
 *      --> Node.js 가 실행되며
 *          통신할 수 있는 상태가 된다
 *
 *      --> main.js 파일은 다운로드된 파일에 있다
 *
 *      - 실행할 코드를 작성한다
 *      --> name.html 이라고 가정하겠다
 *      --> <script> 에 name.js 파일을 작성한다
 *      --> <script src="./name.js" defer></script>
 *
 *      - 브라우저 주소창에서
 *      --> localhost:3000/5/1/name.html 을 입력하고
 *          Enter 키를 누른다
 *
 *      --> name.html 파일이 실행된다
 *
 *      --> /5/1/1 은 폴더이다
 *          5는 강좌의 섹션 번호와 같으며
 *          1은 섹션에 속한 강좌 번호와 같다
 */
console.log("=====================================");
"use strict"
// console.log 사용
const {log} = window.console;
/**
 *           ===== npm 설치 =====
 *
 *      - npm 은  라이브러리를 설치를 두와주는 도구
 *      --> 라이브러리가 필요하면 npm 으로 설치해주면 된다
 *
 *      ----> 라이브러리를 설치하기전에 어떤 라이브러리를 설치했는지
 *            문서같은 것이 있으면 좋을 것이다.
 *
 *      ----> 따라서, 어떤 라이브러리들을 설치했는지 기록하는 것이
 *            package.json 이라는 파일을 만들어서 거기에 기록을 한다.
 *
 *      ----> 그런데, 이것을 수동으로 만들지 않고 npm init 을하면 자동으로
 *            맨들어 준다
 *
 *      ----> init 을 한후, 전부 enter 를치고 넘기되, entry point 만
 *            자기가 사용할 파일명을 입력해 주면된다
 *
 *      ----> package.json 에 dependencies 에 express 라는 정보가 기록된다
 *
 *      ----> node_modules 에 라이브러리에 대한 정보가 다 담긴다
 */
{
    "use strict"
    log('------------  ---------------');

    debugger;
}