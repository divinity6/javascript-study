/**
 * 프로그램 설명문서 주석
 * 2021.10.15 수업
 *
 *
 *           ===== Template Literal =====
 *
 *      Syntax: `문자열`
 *              `문자열 ${표현식} 문자열`
 *              tag `문자열 ${표현식} 문자열`
 *
 *      - Template Literal
 *      --> 문자열 처리를 위한 리터럴
 *      --> 표현식을 포함할 수 있음
 *      ----> 단순히 문자열만 처리하는 것이 아니라 표현식을 포함할 수 있다.
 *
 *      --> 강좌에서는 템플릿으로 표기
 *
 *      - backtick(백틱) 안에 표현식 작성
 *      --> 표현식을 ${표현식} 형태로 작성
 *
 *      - 줄 바꿈 작성 차이
 *
 */
console.log("=====================================");
"use strict"
// console.log 사용
const {log} = window.console;

{
    "use strict"
    log('------------ Template 표현식 ---------------');
    log(`ABC`);

    const one = 1, two = 2;
    const result = `1 + 2는 ${one + two}이 된다`;
    log(result);
    // :: 1 + 2는 3이 된다

    debugger;

    // 1. 백틱(``)안에 문자열을 작성했다
    //    문자열이 그대로 문자열로 출력된다

    // 2. ${one + two}
    //    템플릿에 표현식을 작성했다.

    // 3. 아래 방법으로 표현식을 평가한다
    // -  one에 one 변숫값 1을,
    //    two에 two 변숫값 2를 설정한다

    // -  one의 값과 two의 값을 더해
    //    표현식 위치에 설정한다

    // 4. 템플릿의 모든 공백이 그대로 반영된다.

    /**
     *  템플릿은 문자열과 표현식을 하나로 연결하여 문자열을 처리한다.
     */
}

{
    "use strict"
    log('------------ 줄바꿈 작성 차이 ---------------');
    debugger;

    log("ES5-1라인\n2라인");
    // :: ES5-1라인
    // :: 2라인

    /**
     *  1. ES5 형태로 문자열 중간에서
     *  -  줄을 바꾸려면 \n을 작성한다.
     */

    log(`1라인
      2라인`);
    // :: 1라인
    // ::   2라인

    /**
     *  1. Template 리터럴을 사용했다.
     *
     *  2. ES처럼 \n을 사용하지 않고
     *  -  백틱 안에서 줄을 바꾼다
     *  -  줄 앞에 공백을 작성하면 공백으로 처리된다.
     */

    debugger;
}
