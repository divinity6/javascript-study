/**
  * 프로그램 설명문서 주석
  * 2021.03 30 수업
  * 
  * 
  *           ===== 엔진 해석 순서 =====
  * 
  *     - 자바스크립트는 스크립팅 언어
  *     ----> 스크립팅 언어는
  *     ----> 작성된 코드를 위에서부터 한 줄씩 해석( 환경 설정 )하고 실행
  *     ----> 하지만, 자바스크립트는 다르다
  * 
  *     - 중간에 있는 코드가 먼저 해석될 수도 있음
  * 
  *     - 첫번째, 함수 선언문을 순서대로 해석
  *     ----> function sports(){};
  * 
  *     - 두번째, 표현식을 순서대로 해석
  *     ----> var value = 123;
  *     ----> var book = function(){};
  * 
  *     -------------------------------------------------------------
  * 
  *     - 자바스크립트는 상황에 따라서 중간에 있는 코드가 먼저 해석될 수도 있다.
  *     - 그렇다고 무조건 실행하는 것은 아니고 해석되는 기준이 있다.
  * 
  *     - 그기준의 첫번째가, 먼저 함수 선언문을 순서대로 해석한다
  *     ----> 함수안의 코드중에서 함수 선언문을 모두 추려낸다. 우선,
  *           그런데 그것이 5개가 있다고 가정했을 때, 5개를 작성한 순서로 해석한다.
  * 
  *     ----> 그리고 함수 선언문 해석을 전부 끝낸 후에
  * 
  *     - 두번째로 표현식을 순서대로 해석한다.
  *     ----> 표현식은 var value = 123;, var book = function(){}; 둘다 표현식이다.
  *           다만 값이 function 오브젝트 인것을 우리는 함수 표현식이라고 했다.
  *      
  *     ----> 변수형태로 할당한 것은 전부 표현식이라고 할 수 있다.
  *           이것을 전부 추려낸다. 그리고 작성한 순서대로 해석한다.
  * 
  *     - 다시한번 정리하면 자바스크립트는 우선 함수코드에서 함수 선언문을 전부 추려내고
  *       함수 선언문을 작성한 순서대로 해석한다.
  * 
  *     - 그리고 이것이 전부 끝난 다음에 두 번째로 표현식을 전부 추출해서 표현식을
  *       작성한 순서대로 해석한다.
  * 
  *     =======================================================================
  *     =======================================================================
  * 
  *           ===== 함수 코드 작성 형태 =====
  * 
  *     1. 마지막 줄에서 book 함수 호출
  *     - book();
  * 
  *     2. title 변수 선언
  *     - var tilte = "JS책";
  * 
  *     3. 함수 선언문 작성
  *     - function getBook() { return title; }
  * 
  *     4. 함수 표현식 작성
  *     - var readBook = function(){};
  */
console.log("=====================================");

"use strict"
// console.log 사용
var log = function( value ){
  console.log('--- ' + value +' ---');
};


window.onload = function() {

  function book(){
    console.log(title);
    // :: undefined
    console.log(readBook);
    // :: undefined
    console.log(getBook);
    // :: ƒ getBook(){ return title; }
    debugger;
    var title = "JS책";
    function getBook(){
      return title;
    };
    var readBook = function(){};
    getBook();
  }

  debugger;
  book();

  /*
      - book() 함수를 호출하면 엔진 컨트롤이 book()안으로 이동하게 된다.
        안에 보면  var title = "JS책"; 변수를 선언해서 문자열 값 할당.

      - 그리고 getBook는 함수 선언문.
      - readBook은 함수 표현식.

      =======================================================================
      =======================================================================

                ===== 엔진 처리 상태 =====

      1. 마지막 줄에서 book() 함수를 호출하면
      - debugger에서 실행이 멈춘다

      2. title, readBook 값은 undefined

      3. getBook은 function 오브젝트

      4. getBook이 function 오브젝트라는 것은
      - function getBook(){}을 해석한 것을 뜻한다

      5. title, readBook에 설정된 undefined도 값이며
      - 값이 있다는 것은 엔진이 해석한 것을 뜻한다
      - 해석하지 않으면 title, readBook 값이 표시되지 않는다.

      -----------------------------------------------------------------------

      - 엔진 처리 상태다. 위 함수를 실행 했을 때, 엔진이 어떻게 처리 했는지 그상태를
        보기 위한 것이다.

      - book()함수를 호출하면 엔진컨트롤이 book()안으로 이동하게 되며
        console.log()를 출력하고 debugger에서 멈춘다.

      - 그런데 console.log로 타이틀 값을 출력했는데 값이 undefined이다.
        그리고 readBook 변숫값을 출력했는데 이 또한 undefined이다.

      - 한편 getBook을 출력했더니 function 오브젝트가 나왔다.
      ----> getBook은 함수 선언문이다.

      - 즉, getBook()이 function 오브젝트라는것은 getBook(){}을 해석했다는 뜻이된다.

      - 해석했다라는 이야기는 function 오브젝트를 만들었다는 이야기다.

      - 또한 title과 readBook에 undefined가 설정되어 있지만, 이또한 해석을 했다라는 뜻이된다.
      ----> 여기서 해석했다라는 것은 스코프에다 식별자 해결을 위해 등록을 했다라는 이야기다.

      - 그런데 함수 선언문은 이름과 값이 전체가 등록되어 있고, tilte과 readBook은 이름은
        정상적으로 등록되어 있는데 값은 아니다라는 것.(undefined 인것)

      - 이렇게 undefined가 설정된것은 자바스크립트는 프로퍼티를 등록할 때, 이름만 있으면
        값을 undefined로 자동적으로 설정해 버린다.
      ----> 그래야 { name : value }, { key : value } 구조가 맞기 때문에 그렇다.
            프로퍼티로 등록하는데 값이 없고, 이름만 등록할 수는 없다.

      ----> 이럴 때, 바로 undefined를 사용한다. 시멘틱 그래도 define하지 않았다라는 것.

      - 이것이 자바스크립트 엔진이 프로퍼티를 등록하는 기준이다.

      == 계속해서 왜 undefined가 설정되고, function 오브젝트가 설정되었는지 알아보겠다 ==
  
  */
};
